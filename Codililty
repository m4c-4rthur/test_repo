/**

BinaryGap
Find longest sequence of zeros in binary representation of an integer.
**/

public static int solution(int N) {
        char[] arr = Integer.toBinaryString(N).toCharArray();
        boolean found = false;
        int finalCount= 0;
        int tempCount= 0;
        for(int i=0;i<arr.length;i++){
        	
        	if(arr[i]=='0'){
        		tempCount++;
        		found = true;
        	}
        	if(arr[i]=='1'){
        		if(found){
        			finalCount = tempCount > finalCount ? tempCount : finalCount;
        		}
        		found = false;
        		tempCount = 0;
        	}
        }
        return finalCount;
    }

/**

OddOccurrencesInArray
Find value that occurs in odd number of elements.
**/
 public int solution(int[] A) {
        Arrays.parallelSort(A);
        if(A.length == 1){
        	return A[0];
        }
        for(int i = 0 ; i< A.length; i++){
        	if(i+1==A.length )
        		return A[i];
        	if(A[i] != A[i+1]){
        		return A[i];
        	}
    		i++;
        }
        return 0;
    }
